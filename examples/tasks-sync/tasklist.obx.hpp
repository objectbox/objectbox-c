// Code generated by ObjectBox; DO NOT EDIT.

#pragma once

#include <cstdbool>
#include <cstdint>

#include "flatbuffers/flatbuffers.h"
#include "objectbox.h"
#include "objectbox.hpp"


struct Task_;

/// A task with a description, a creation and completion date.
struct Task {
    obx_id id;
    std::string text;
    int64_t date_created;
    /// If not set (zero value), the task is not finished.
    int64_t date_finished;

    struct _OBX_MetaInfo {
        static constexpr obx_schema_id entityId() { return 1; }
    
        static void setObjectId(Task& object, obx_id newId) { object.id = newId; }
    
        /// Write given object to the FlatBufferBuilder
        static void toFlatBuffer(flatbuffers::FlatBufferBuilder& fbb, const Task& object);
    
        /// Read an object from a valid FlatBuffer
        static Task fromFlatBuffer(const void* data, size_t size);
    
        /// Read an object from a valid FlatBuffer
        static std::unique_ptr<Task> newFromFlatBuffer(const void* data, size_t size);
    
        /// Read an object from a valid FlatBuffer
        static void fromFlatBuffer(const void* data, size_t size, Task& outObject);
    };
};

struct Task_ {
    static const obx::Property<Task, OBXPropertyType_Long> id;
    static const obx::Property<Task, OBXPropertyType_String> text;
    static const obx::Property<Task, OBXPropertyType_Date> date_created;
    static const obx::Property<Task, OBXPropertyType_Date> date_finished;
};

